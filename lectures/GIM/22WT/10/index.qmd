---
title: "`K10` Implementierung"
subtitle: "Wie entstehen Informationssysteme?"
lang: de-DE

bibliography: ../assets/literature.bib

format: 
  html:
    output-file: index.html
  revealjs:
    date: "Wintersemester 2022"
    output-file: slides.html 
    include-after-body: ../assets/footer.html
---

# Top {visibility="hidden" .slide-link-hidden .unlisted .unnumbered}

<!-- LTeX: language=de-DE -->

[Präsentation](slides.html)[^print]

{{< include ../assets/_version.qmd >}}

# Motivation {.vertical-center background-color=blue}

> We‘ve minimized the economic impact of the defects of the system via an advanced business process called ‘hoping nobody notices’. *Dilbert, merican comic strip written and illustrated by Scott Adams*

. . .

> As a rule, software systems do not work well until they have been used, and have failed repeatedly, in real applications. *David Parnas, early pioneer of software engineering and professor of computer science*

:::{.notes}
Der Nutzen von Anwendungssystemen zeigt sich nicht auf dem Paper, sondern erst in der Praxis—wenn Sie Teil eines betrieblichen Informationssystem werden. Um den Nutzen zu maximieren, müssen die richtigen Anwenundungssysteme ausgewählt oder entwickelt, an die Geschäftsprozesse angepasst (oder vice versa) und von den Mitarbeitenen genutzt werden. Welche Möglichkeiten zur Implementierung zur Verfügung stehen und was es zu beachten gilt ist Thema dieses Kapitels.
:::

# Lernergebnisse 🎯

Nach dieser Einheit

::: incremental
- verstehen Sie, weshalb **Modelle** für die Entwicklung und Anpassung von Anwendungssystemen notwendig sind,
- kennen Sie die Begriffe **Grobkonzept**, **Fachkonzept** und **technisches Design** und können diese voneinander abgrenzen,
- können Sie die **Herausforderungen in der fachlichen Konzeption** von Anwendungssystemen erläutern und kennen Ansätze zum Umgang mit diesen,
- verstehen Sie **Grundsätze der linearen Phasen-basierten sowie der agilen Methoden** zur Entwicklung von Individualsoftware erläutern und
- können Sie **den Auswahl- und Einführungsprozess von Standardsoftware** beschreiben
:::

# Einleitung

Für viele Bereiche sind Anwendungen am Markt erhältlich, mit der die fachlichen Anforderungen vieler Unternehmen  abgedeckt werden können — sogenannte __Standardsoftware__ [@mertens2016grundzuge]. 

. . .

Sind die Anforderungen des Unternehmens sehr spezifisch, so muss die Standardsoftware __modifiziert__ bzw. erweitert werden.

. . .

Ist das nicht möglich, ist die Entwicklung eines unternehmensspezifischen Anwendungssystems erforderlich — sogenannte __Individualsoftware__ [@mertens2016grundzuge].

:::{.notes}
:::{.callout-note}
### Vor- und Nachteile von Standard- und Individualsoftware
Einführung und Betrieb von Standardsoftware sind in der Regel mit __weniger Risiken__ behaftet: 

- Niedrigere und besser kalkulierbare Kosten und höhere Investitionssicherheit
- Möglichkeiten zur Evaluierung vor Einführung
- Höhere Qualität (Reife, Stabilität und Skalierbarkeit, Standardkonformität)
- Abbildung von Best-Practice Prozessen

Auf der anderen Seite kann Individualsoftware besser auf die Unternehmensbelange zugeschnitten werden. So können bspw. __spezifische Prozesse__, die eine Basis für Wettbewerbsvorteile darstellen, unterstützt werden.
:::
:::

# Anwendungslebenszyklus

# Anforderungsmanagement

Vor der Auswahl und Einführung eines Systems müssen die **Anforderungen unternehmensspezifisch erhoben werden** [@krcmar2015informationsmanagement].

. . .

Informationssysteme sind **soziotechnische Systeme**. Deshalb müssen neben den technischen Anforderungen auch Anforderungen an die nicht-technischen Komponenten formuliert werden (insbesondere die zu gestaltenden Prozesse).

. . .

Das **Anforderungsmanagement** ist eine systematische Vorgehensweise, um alle relevanten Anforderungen zu ermitteln, zu analysieren, zu vereinbaren, zu spezifizieren, zu validieren, im Projekt zu verfolgen und gegebenenfalls zu ändern [@ebert2019systematisches].

## Notwendigkeit

![Software development tree swing, Urheber unbekannt](images/requirements-engineering.jpg){#fig-re}

## Anforderungsarten

Die Anforderungen an ein zu entwickelndes System können in **funktionale und nichtfunktionale Anforderungen** unterschieden werden.

. . .

Funktionale Anforderungen
: Diese beschreiben das Verhalten und die Funktionen des Systems und geben an, was das zu  System leisten soll. 

. . .

Nichtfunktionale Anforderungen
: Diese beschreiben, wie gut funktionale Anforderungen durch das System
realisiert werden sollen (bspw. die Reaktionszeit).

## Aktivitäten

:::{.notes}
Nach @ebert2019systematisches sind die Aktivitäten des Anforderungsmanagements: 

- **Anforderungsermittlung**: Im Rahmen der Anforderungsermittlung werden die Anforderungsquellen, z. B. Stakeholder, identifiziert und die Anforderungen an das zu entwickelnde System erhoben. 
- **Anforderungsanalyse**: Die ermittelten Anforderungen werden hinsichtlich ihrer Machbarkeit, Vollständigkeit oder Eindeutigkeit überprüft sowie konkretisiert und priorisiert. Das Ziel der Anforderungsanalyse ist die Beschreibung einer angestrebten Lösung, die die Anforderungen erfüllt.
- **Anforderungsvereinbarung**: Im Rahmen der Anforderungsvereinbarung werden Konflikte zwischen Stakeholdern in Bezug auf die Anforderungen identifiziert und gelöst. 
- **Spezifikation**: Die abgestimmten Anforderungen werden in einem Anforderungsdokument, auch Anforderungsspezifikation genannt, festgehalten. Die Beschreibung des Systems kann zusätzlich beispielsweise in Form von Use Cases erfolgen.
- **Validierung**: Während der Validierung wird überprüft, ob die analysierten und spezifizierten Anforderungen den Stakeholderwünschen oder Marktbedürfnissen entsprechen.
- **Änderungsmanagement**: Das Änderungsmanagement hat die Aufgabe mit Änderungen an Anforderungen so zu erheben, zu
verwalten und zu priorisieren, dass die Projektlaufzeit sowie das Budget nicht überschritten werden und dass das Projekt
insgesamt erfolgreich abgeschlossen werden kann.
:::


# Individualsoftware


# Standardsoftware


# Übungen ✏️ {.vertical-center background-color=blue}

# Lernkontrolle 🧐 {visibility="hidden"}

# Literatur 📚
::: {#refs}
:::