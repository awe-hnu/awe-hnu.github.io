---
title: "K6 Anwendungssysteme"
subtitle: "Grundz√ºge der Wirtschaftsinformatik (GWI)"
lang: de-DE

format: 
  html:
    output-file: index.html
  revealjs:
    output-file: slides.html 
    include-after-body: ../assets/footer.html
---

# Top{visibility="hidden" .slide-link-hidden .unlisted .unnumbered}
[Folien](slides.html) / 
[Podcast](https://videoportal.hs-neu-ulm.de/Mediasite/Play/cd2b2018652546078c68956daafddc131d)

# Motivation {.vertical-center background-color=blue}

>Zu den gewaltigen Kosten f√ºr die Softwareumstellung als solche kommen jeden Tag neue f√ºr Fehlersuche und Problembeseitigung. *Ernst Prost (2019), Gesch√§ftsf√ºhrer der Liqui Moly GmbH in Ulm*

. . .

Damit das nicht passiert, m√ºssen die passenden Anwendungssysteme ausgew√§hlt und an die Gesch√§ftsprozesse angepasst werden (und/oder vice versa). Welche Anwendungssystemklassen in Unternehmen eingesetzt werden, behandelt dieses Kapitel.

# Lernergebnisse üéØ

Nach dieser Einheit  

::: {.incremental}
- k√∂nnen Sie den Begriff __Anwendungssystem__ erl√§utern und vom Begriff Informationssystem abgrenzen,
- sind Sie in der Lage, betriebliche Anwendungssysteme nach unterschiedlichen Kriterien zu __klassifizieren__,
- k√∂nnen Sie beschreiben, wie die Anwendungssystem-Kategorien __ERP, SCM und BI__ aufgebaut sind und welchem Zweck diese jeweils dienen,
- sind Sie in der Lage, den Begriff __Business Intelligence (BI)__ zu erl√§utern und die Komponenten eines BI-Systems zu beschreiben und
- kennen Sie die Argumente f√ºr und wider __Individual- und Standardsoftware__.
:::

# Wiederholung: IS {.vertical-center background-color=blue}

## Einordnung

__Informationssysteme (IS)__ unterst√ºtzen die Sammlung, Strukturierung, Verarbeitung, Bereitstellung, Kommunikation und Nutzung von Daten, Informationen und Wissen [@lemke2015einfuhrung].

. . .

Sie tragen zur Entscheidungsfindung, Koordination, Steuerung und Kontrolle von Wertsch√∂pfungsprozessen sowie deren Automatisierung, Integration und Virtualisierung bei [@lemke2015einfuhrung].

. . .

Anwendungssysteme (englisch ‚ÄûSoftware‚Äú) sind in der Regel Teil eines Informationssystems. 

## Visualisierung

![Schematische Darstellung der Komponenten eines Informationssystems nach @alpar2000anwendungsorientierte](../1/images/informationssystem.svg){#fig-is}

# Anwendungssysteme {.vertical-center background-color=blue}

## Definition

Als __Anwendungssystem (AS)__ werden alle Programme und Daten, die (betriebliche) Aufgabenstellungen unterst√ºtzen, bezeichnet [@lemke2015einfuhrung].

. . .

In Kombination mit der Benutzerschnittstelle oder dem User Interface (UI) ist das Anwendungssystem ein technischer Teil eines (betrieblichen) Informationssystems [@lemke2015einfuhrung].

:::{.notes}
Anwendungssysteme werden verk√ºrzt als Anwendung bezeichnet. Oft spricht man auch von ‚ÄûApplikation‚Äú (Englisch ‚Äûbusiness application‚Äú oder nur ‚Äûapplication‚Äú). __‚ÄûApp‚Äú__ ist die Kurzform von Applications und wird oft im Zusammenhang mit mobilen Plattformen verwendet (bspw. Apps f√ºr das Smartphone, die √ºber ‚ÄûApp Stores‚Äú geladen werden) [@abts2017grundkurs].
:::

## Betriebliche AS

__Betriebliche Anwendungssysteme__ unterstuÃàtzen die Anwender innerhalb eines Unternehmens bei der DurchfuÃàhrung ihrer Aufgaben. 

. . .

Anwendungen bilden dabei die __Gesch√§ftslogik__ bzw. die fachlichen Funktionszusammenh√§nge ab, die durch die Gesch√§ftsprozesse definiert und repr√§sentiert werden [@alpar2000anwendungsorientierte].

. . .

In modernen Unternehmen werden fast alle Prozesse durch Anwendungssysteme unterst√ºtzt.

## Prozesse

![Beispiele f√ºr betriebliche AS entlang der Value Chain](images/valueChain.svg){#fig-valueChain}

## Einsatzzweck

![Unterscheidung anhand der Einordnung in die Unternehmenshierarchie](images/hierarchie.svg){#fig-valueChain}

:::{.notes}
:::{.callout-note}
### Horizontale und vertikale Integration

AS wurden und werden h√§ufig fuÃàr einzelne Unternehmen bzw. deren Abteilungen oder sogar einzelne Arbeitspl√§tze entwickelt, was einem arbeitsplatz-, abteilungs- oder unternehmensuÃàbergreifenden Informationsfluss im Wege steht. Integration hei√üt, dass diese Grenzen wieder aufgehoben werden. Bei der Integration von AS m√ºssen __Daten__, __Funktionen__ und __Prozesse__ aufeinander abgestimmt werden [@mertens2016grundzuge, S. 65-66].

Unter __horizontaler Integration__ versteht man in der Wirtschaftsinformatik prim√§r die Verbindung der operativen Systeme verschiedener Unternehmensbereiche, also z. B. die Weitergabe der aktuellen Auftragseing√§nge aus dem Vertrieb an die Produktionsplanung.

__Vertikale Integration__ bezieht sich vor allem auf die Datenversorgung der analytischen Systeme aus den operativen Systemen. Sind bspw. kundenbezogene Informationen auf verschiedene AS verteilt, so erm√∂glicht erst eine Sammlung und Konsolidierung dieser Daten in einem BI-System eine umfassende Analyse der Rentabilit√§t einzelner Marktsegmente.
:::
:::

## Make or Buy

F√ºr viele Bereiche sind Anwendungen am Markt erh√§ltlich, mit der die fachlichen Anforderungen vieler Unternehmen  abgedeckt werden k√∂nnen ‚Äî sogenannte __Standardsoftware__ [@mertens2016grundzuge]. 

. . .

Sind die Anforderungen des Unternehmens sehr spezifisch, so muss die Standardsoftware __modifiziert__ bzw. erweitert werden.

. . .

Ist das nicht m√∂glich, ist die Entwicklung eines unternehmensspezifischen Anwendungssystems erforderlich ‚Äî sogenannte __Individualsoftware__ [@mertens2016grundzuge].

:::{.notes}
:::{.callout-note}
### Vor- und Nachteile von Standard- und Individualsoftware
Einf√ºhrung und Betrieb von Standardsoftware sind in der Regel mit __weniger Risiken__ behaftet: 

- Niedrigere und besser kalkulierbare Kosten und h√∂here Investitionssicherheit
- M√∂glichkeiten zur Evaluierung vor Einf√ºhrung
- H√∂here Qualit√§t (Reife, Stabilit√§t und Skalierbarkeit, Standardkonformit√§t)
- Abbildung von Best-Practice Prozessen

Auf der anderen Seite kann Individualsoftware besser auf die Unternehmensbelange zugeschnitten werden. So k√∂nnen bspw. __spezifische Prozesse__, die eine Basis f√ºr Wettbewerbsvorteile darstellen, unterst√ºtzt werden.
:::
:::

----

### Fallstricke

:::{.notes}
Der Weg zu einer funktionalen Eigenentwicklung ist lange und steinig. Damit die in @fig-re angedeuteten Probleme nicht auftreten, sollten folgende Punkte nicht untersch√§tzt, sondern gut geplant und durchgef√ºhrt werden.

__Requirements Engineering (Anforderungserhebung)__

- Erhebung: Ermitteln der Anforderungen
- Analyse: Klassifizierung und Organisation der Anforderungen
- Spezifikation: Physische Dokumentation der Anforderungen (Anforderungsdokument)	
- Validierung: √úberpr√ºfung, ob alle Anforderungen korrekt erhoben wurden (G√ºltigkeit, Konsistenz, Vollst√§ndigkeit, Realismus und √úberpr√ºfbarkeit)

__Betrieb und Weiterentwicklung__
:::

![Software development tree swing, Urheber unbekannt](images/re.jpg){#fig-re}

# Beispiele {.vertical-center background-color=blue}

## Kollaborationssysteme

Als __Kollaborationssysteme__ (Collaboration Tools) werden Anwendungssysteme bezeichnet, die die __Zusammenarbeit__ von Personen innerhalb eines Unternehmens (funktions√ºbergreifend) sowie auch unternehmens√ºbergreifend erm√∂glichen und verbessern [@abts2017grundkurs].

. . .

Die Zusammenarbeit kann sowohl synchron als auch asynchron erfolgen. 

. . .

Mittels Kollaborationssysteme sollen Mitarbeiter funktions√ºbergreifend besser miteinander kommunizieren und das Wissen untereinander teilen.

. . .

__Beispiele:__ Office 365, Google Docs, Slack, etc.

## ERP-Systeme

Als Enterprise Resource Planning Systeme (ERP-Systeme) bezeichnet man __integrierte betriebswirtschaftliche Standardanwendungssoftware__.

. . .

Integriert bedeutet, dass s√§mtliche oder __wesentliche Teile der Gesch√§ftsprozesse__ innerhalb des Unternehmens unterst√ºtzt werden (u.a. Beschaffung, Produktion, Vertrieb und Rechnungswesen) und Daten in einer zentralen Datenbank gehalten werden [@abts2017grundkurs].

. . .

ERP-Systeme erm√∂glichen die __horizontale__ und __vertikale Integration__ von Prozessen.

----

### Visualisierung (ERP) {.unlisted}

![Schematischer Aufbau eines ERP-Systems, eigene Darstellung basierend auf @abts2017grundkurs [S. 194]](images/erp.svg){#fig-erp}

## SCM-Systeme

__Supply-Chain-Management (SCM)__ beschreibt die aktive Gestaltung aller Prozesse, um Kunden oder M√§rkte in Wertsch√∂pfungsketten wirtschaftlich mit Produkten und Dienstleistungen zu versorgen.

. . .

SCM-Systeme unterst√ºtzen die __Gesch√§ftsprozessintegration innerhalb der Wertsch√∂pfungskette__ zwischen den einzelnen Unternehmen auf den unterschiedlichen Wertsch√∂pfungsstufen und dem Endkunden @bachle2021einfuhrung.

. . .

SCM-Systeme steuern und optimieren unternehmens√ºbergreifende Informations-, Geld- und G√ºter- und Dienstleistungsstr√∂me und unterst√ºzten damit bei der Gestaltung, Planung und Steuerung von Lieferketten.

----

### Visualisierung (SCM) {.unlisted}

![Einbettung von SCM-Systemen, eigene Darstellung](images/scm.svg){#fig-scm}

:::{.notes}
__Zielsetzungen (Auswahl)__:

- Verringerung des [Bullwhip-Effekts](https://de.wikipedia.org/wiki/Peitscheneffekt_(Supply-Chain-Management))
- Erh√∂hung der Liefertreue Kosteneinsparungen bspw. durch h√∂here Kapazit√§tsauslastung und
- Senkung von Lagerbest√§nden, Verringerung der Lead-Time, etc.

:::

## CRM-Systeme

__Customer-Relationship-Management (CRM)__ umfasst den Aufbau und die Festigung langfristig profitabler Kundenbeziehungen durch abgestimmte und kundenindividuelle Marketing-, Sales- und Servicekonzepte mit Hilfe moderner IT.

. . .

__CRM-Systeme__ sind Anwendungssysteme, die s√§mtliche  Interaktionen der Unternehmung mit Kunden verfolgen und  analysieren, um Umsatz, Rentabilit√§t, Kunden-zufriedenheit und  Kundenbindung zu optimieren. Diese Systeme 

- vereinen eine Vielzahl von Einzell√∂sungen aus verschiedenen Unternehmensbereichen 
- lassen in die beiden  Teilbereiche operatives CRM und analytisches CRM aufteilen.

. . .

In der Regel unterscheidet man zwischen __operativen__, __analytischen__ und __kommunikativen CRM-Systemen__

----

### Visualisierung (CRM) {.unlisted}

![Aufbau un Einbettung von CRM-Systemen, eigene Darstellung](images/crm.svg){#fig-crm}

:::{.notes}
### Operatives CRM

Systeme, die Unterst√ºtzung f√ºr das Tagesgesch√§ft in der direkten Interaktion mit den Kunden bieten, insbesondere 
- Unterst√ºtzung des Kundenkontakts durch Integration aller Daten zum Kunden 
- Bereitstellung von Anwendungen f√ºr das Front- und Backoffice (bspw. Angebotsmgmt)
- Verbesserung der Reaktionsf√§higkeit auf Kundenbed√ºrfnisse, Effizienz und Integration der Lieferketten

Hauptziel ist es, die Kunden zufrieden zu stellen und so viele Daten wie m√∂glich zu sammeln.

### Analytisches CRM

Systeme, die helfen 360¬∞-Sichten auf den Kunden durch Zusammenf√ºhrung aller verf√ºgbaren Daten zu erstellen, z.B.,

- Beziehungskarten und Kontaktverlauf
- Demografische und psychografische Daten
- Rentabilit√§tskennzahlen (z. B. Share of Wallet) 
- Marketing- und Vertriebsinformationen
- Daten zur Produktnutzung

Hauptziel ist die Gewinnung von Wissen √ºber den Kunden, um Ableitungen f√ºr die Interaktion mit dem Kunden zu gewinnen und Strategien zur Marktbearbeitung zu entwickeln (bspw. mittels Kundensegmentierung)

### Kommunikatives CRM

Kommunikative CRM Systeme sind oftmals Teil operativer CRM Systeme. Sie umfassen das Management aller Kommunikationskan√§le zwischen Kunde und Unternehmen (Telefonie, Internet, E-Mail, Direct Mailing, etc.).  Die verschiedenen Kommunikationskan√§le werden synchronisiert, gesteuert und eingesetzt, um eine zielgerichtete Kommunikation zwischen Kunden und Unternehmen zu erm√∂glichen. Dieser Ansatz wird auch als Multi Channel Management bezeichnet.

Grunds√§tzlich kann zwischen dem direkten und indirekten Kommunikationskanal unterschieden werden.

- Direkte Kommunikation: Das Unternehmen tritt unmittelbar mit den Kunden in Kontakt (bspw. Besuche von Au√üendienstmitarbeitern, Telefonate, direkter Kontakt mit dem Verkaufspersonal in Verkaufsr√§umen, Kontakt via Chat oder Instant Messaging, etc.)
- Indirekte Kommunikation: Es findet kein direkter pers√∂nlicher Kontakt zwischen Unternehmen und Kunden statt (bspw. Briefe, Faxe, E-Mail-Kampagnenm etc.)
:::

## BI-Systeme

Business Intelligence (BI) bezeichnet ein integrierter, IT-basierter Gesamtansatz zur Unterst√ºtzung betrieblicher Entscheidungen.

. . .

BI-Systeme kombinieren Komponenten f√ºr die Beschaffung, Aufbereitung und Bereitstellung von Daten. Zielsetzung ist, neue Erkenntnisse aus bestehenden Daten f√ºr bessere Entscheidungen zu gewinnen [@abts2017grundkurs].

:::{.incremental}
- BI-Systeme bauen auf einem __Data Warehouse__[^DM], einer zentralen Datenbank, die aktuelle und historische Daten in aggregierter und mehrdimensionaler Form speichert, auf
- Die Daten aus dem DW werden in der Regel mittels __OLAP__ analysiert
- Mittels __Data Mining__ werden die Daten analysisert, um sinnvolle Muster oder Regelm√§√üigkeiten zu entdecken (bspw. Kaufverhalten der Kunden)
:::

[^DM]:Teilbereiche des DW werden als __Data Mart__ bezeichnet. Sie werden insbesondere zur Steigerung der Performance eingerichtet (z. B. Data Mart fuÃàr den Vertrieb)

----

### Visualisierung (BI) {.unlisted}

![Schematischer Aufbau von BI-Systemen, eigene Darstellung nach @bachle2021einfuhrung (S. 132)](images/bi.svg){#fig-bi}

# ‚úèÔ∏è Aufgaben {.vertical-center background-color=blue}

## A1: Beispiele

Finden Sie jeweils ein Beispiel f√ºr folgende Kategorien an Anwendungssystemen und begr√ºnden Sie die Zuordnung

- Analytisches Anwendungssystem
- Standardsoftware
- Indivudalsoftware
- Anwendungssystem f√ºr HR
- Anwendungssystem f√ºr Marketing und Sales

## A2: Wasserfallmodell

Im sogenannten Wasserfallmodell ist festgelegt, dass mit einer Phase des Software-Engineerings erst begonnen werden darf, wenn die vorangehende Phase vollst√§ndig abgeschlossen ist. 

√úberlegen Sie, welche Nachteile ein solch striktes Vorgehen haben k√∂nnte.

:::{.notes}
:::{.callout-note}
### Software-Engineering

Unter dem Begriff Software Engineering werden alle ingenieurm√§√üigen Vorgehensweisen zur Entwicklung von Anwendungssystemen (Individualsoftware) zusammengefasst. In der Regel folgt das Software-Engineering einem definierten Vorgehensmodell. Die meisten Vorgehensmodelle unterscheiden min. zwischen den Phasen Analyse, Entwurf, Realisierung und Einf√ºhrung

In der __Analysephase__ wird der Ist-Zustand analysiert (Erhebung und Bewertung), der Soll-Zustand definiert (fachliche Anforderungen und technische Anforderungen) und es werden Wirtschaftlichkeitsvergleiche angestellt. Ergebnis ist die Anforderungsspezifikation (Lasten- und Pflichtenheft, Englisch ‚Äûrequirements definition‚Äú).

In der __Entwurfsphase__ werden Systementwurf (Definition der Datenstrukturen, Funktionen, Prozessabl√§ufe, etc.), Programmspezifikation (Vorgaben f√ºr die technische Entwicklung) und Programmentwurf erstellt. Ergebnis ist die Entwurfsspezifikation (Englisch ‚Äûdesign specification‚Äú).

In der __Realisierungsphase__ wird das Programm programmiert und getestet. Ergebnis ist ein lauff√§higes, m√∂glichst fehlerfreies Softwaresystem.

In der __Einf√ºhrungsphase__ wird das System vom Kunden bzw. Nutzer abgenommen (Abnahmetest), das System in den Betrieb √ºberf√ºhrt und letzte Anpassungen vorgenommen. Ergebnis ist ein freigegebenes System bzw. eine neue Systemversion.
:::
:::

## A3: Agile Vorgehensmodelle

Recherchieren Sie zu agilen Vorgehensmodellen. Fassen Sie die aus Ihrer Sicht wichtigsten Vorteile zum Wasserfallmodell in eigenen Worten zusammen. 

Folgende Quellen k√∂nnten n√ºtzlich sein: @abts2017grundkurs, @bachle2021einfuhrung und [Agile Essentials der Agile Alliance](https://www.agilealliance.org/agile-essentials)

:::{.notes}
:::{.callout-note}
#### Agile Vorgehensmodelle

Um die Nachteile des Wasserfallmodells zu vermeiden werden in vielen Unternehmen mittlerweile h√§ufig agile Vorgehensmodelle des Software-Engineerings eingesetzt (bspw. Scrum, Kanban). 

Diese sind als Gegenentwurf zu den traditionellen Vorgehensmodellen entstanden und zielen unter anderem darauf ab, auf Anforderungs√§nderungen schnell reagieren zu k√∂nnen. Die agilen Vorgehensmodelle basieren auf denselben Prinzipien und weisen Gemeinsamkeiten im Vorgehen auf.
:::
:::

## A4: OLAP

OLAP steht f√ºr ‚ÄûOnline Analytical Processing‚Äú und erlaubt die mehrdimensionale Abfrage von Daten im Data Warehouse. Die Mehrdimensionalit√§t wird √ºblicherweise anhand eines Datenw√ºrfels (Data Cube; OLAP Cube) veranschaulicht. 

Recherchieren Sie zu OLAP, skizzieren Sie einen Datenw√ºrfel und beschreiben Sie die Slice-Funktion sowie deren Nutzen.

# Literatur
::: {#refs}
:::